import heapq

def dijkstra(graph, start_node, destination_node):
# def dijkstra(graph, start_node, destination_node, a):

    # 시작 노드로부터의 거리 초기화
    dist = {node: float('inf') for node in graph}
    dist[start_node] = 0
    # 시작 노드를 큐에 삽입
    pq = [(0, start_node)]
    # 최단 경로를 저장할 딕셔너리 초기화
    prev = {node: None for node in graph}

    # print(dist);
    # print(prev);
    # print(pq);

    while pq:
        # 현재 가장 짧은 거리를 가진 노드 선택
        curr_dist, curr_node = heapq.heappop(pq)
        # 이미 처리된 노드라면 건너뜀
        if curr_dist > dist[curr_node]:
            continue
        # 현재 노드와 연결된 모든 노드를 순회
        for next_node in graph[curr_node]:
            # if next_node == a:
            #     continue
            # 새로운 거리 계산
            new_dist = curr_dist + 1
            # 새로운 거리가 더 짧으면 업데이트
            if new_dist < dist[next_node]:
                dist[next_node] = new_dist
                prev[next_node] = curr_node
                heapq.heappush(pq, (new_dist, next_node))
    # 도착 노드까지의 최단 경로 출력
    path = [destination_node]
    while path[-1] != start_node:
        path.append(prev[path[-1]])
    path.reverse()
    # print(path)
    # print(f"최단 경로: {' -> '.join(path)}")
    # 도착 노드까지의 거리 반환
    return path

# 예시 그래프
graph = {

    'BS0101': [],
    'BS0102': ['B0102'],
    'BS0103': [],
    'BS0104': ['B0104'],
    'BS0105': [],
    'BS0106': ['B0106'],
    'BS0107': ['B0107'],
    'BS0108': [],
    'BS0109': ['B0109'],
    'BS0110': ['B0110'],
    'BS0111': [],
    'BS0112': ['B0112'],
    'BS0113': [],
    'BS0114': ['B0114'],
    'BS0115': [],

    'B0101': ['B0102','BS0101'],
    'B0102': ['B0103','B0202'],
    'B0103': ['B0104','BS0103'],
    'B0104': ['B0105','B0204'],
    'B0105': ['B0106','BS0105'],
    'B0106': ['B0107','B0206'],
    'B0107': ['B0207'],
    'B0108': ['BS0108'],
    'B0109': ['B0209'],
    'B0110': ['B0109','B0210'],
    'B0111': ['B0110','BS0111'],
    'B0112': ['B0111','B0212'],
    'B0113': ['B0112','BS0113'],
    'B0114': ['B0113','B0214'],
    'B0115': ['B0114','BS0115'],

    'B0201': ['B0101'],
    'B0202': ['BP0101','B0201'],
    'B0203': ['B0103','B0202'],
    'B0204': ['BP0103','B0203'],
    'B0205': ['B0105','B0204'],
    'B0206': ['BP0105','B0205'],
    'B0207': ['BP0106','B0206'],
    'B0208': ['B0108','B0207','B0209'],
    'B0209': ['BP0107','B0210'],
    'B0210': ['BP0108','B0211'],
    'B0211': ['B0111','B0212'],
    'B0212': ['BP0110','B0213'],
    'B0213': ['B0113','B0214'],
    'B0214': ['BP0112','B0215'],
    'B0215': ['B0115'],

    'BP0101': ['BP0201'],
    'BP0102': ['B0203','BP0103'],
    'BP0103': ['BP0203'],
    'BP0104': ['B0205','BP0105'],
    'BP0105': ['BP0205'],
    'BP0106': ['BP0206'],
    'BP0107': ['BP0207'],
    'BP0108': ['BP0208'],
    'BP0109': ['B0211','BP0108'],
    'BP0110': ['BP0210'],
    'BP0111': ['B0213','BP0110'],
    'BP0112': ['BP0212'],

    'BP0201': ['B0302'],
    'BP0202': ['BP0102'],
    'BP0203': ['B0304','BP0202'],
    'BP0204': ['BP0104'],
    'BP0205': ['B0306','BP0204'],
    'BP0206': ['B0307'],
    'BP0207': ['B0309'],
    'BP0208': ['B0310','BP0209'],
    'BP0209': ['BP0109'],
    'BP0210': ['B0312','BP0211'],
    'BP0211': ['BP0111'],
    'BP0212': ['B0314'],

    'B0301': ['B0201','B0302'],
    'B0302': ['B0402','B0303'],
    'B0303': ['BP0202','B0304'],
    'B0304': ['B0404','B0305'],
    'B0305': ['BP0204','B0306'],
    'B0306': ['B0406','B0307'],
    'B0307': ['B0407'],
    'B0308': ['B0208'],
    'B0309': ['B0409'],
    'B0310': ['B0410','B0309'],
    'B0311': ['BP0209','B0310'],
    'B0312': ['B0412','B0311'],
    'B0313': ['BP0211','B0312'],
    'B0314': ['B0414','B0313'],
    'B0315': ['B0215','B0314'],

    'B0401': ['B0301'],
    'B0402': ['BP0301','B0401'],
    'B0403': ['B0303','B0402'],
    'B0404': ['BP0303','B0403'],
    'B0405': ['B0305','B0404'],
    'B0406': ['BP0305','B0405'],
    'B0407': ['BP0306','B0406'],
    'B0408': ['B0308','B0407','B0409'],
    'B0409': ['BP0307','B0410'],
    'B0410': ['BP0308','B0411'],
    'B0411': ['B0311','B0412'],
    'B0412': ['BP0310','B0413'],
    'B0413': ['B0313','B0414'],
    'B0414': ['BP0312','B0415'],
    'B0415': ['B0315'],

    'BP0301': ['BP0401'],
    'BP0302': ['B0403','BP0303'],
    'BP0303': ['BP0403'],
    'BP0304': ['B0405','BP0305'],
    'BP0305': ['BP0405'],
    'BP0306': ['BP0406'],
    'BP0307': ['BP0407'],
    'BP0308': ['BP0408'],
    'BP0309': ['B0411','BP0308'],
    'BP0310': ['BP0410'],
    'BP0311': ['B0413','BP0310'],
    'BP0312': ['BP0412'],

    'BP0401': ['B0502'],
    'BP0402': ['BP0302'],
    'BP0403': ['B0504','BP0402'],
    'BP0404': ['BP0304'],
    'BP0405': ['B0506','BP0404'],
    'BP0406': ['B0507'],
    'BP0407': ['B0509'],
    'BP0408': ['B0510','BP0409'],
    'BP0409': ['BP0309'],
    'BP0410': ['B0512','BP0411'],
    'BP0411': ['BP0311'],
    'BP0412': ['B0514'],

    'B0501': ['B0401','B0502'],
    'B0502': ['B0602','B0503'],
    'B0503': ['BP0402','B0504'],
    'B0504': ['B0604','B0505'],
    'B0505': ['BP0404','B0506'],
    'B0506': ['B0606','B0507'],
    'B0507': ['B0607'],
    'B0508': ['B0408'],
    'B0509': ['B0609'],
    'B0510': ['B0610','B0509'],
    'B0511': ['BP0409','B0510'],
    'B0512': ['B0612','B0511'],
    'B0513': ['BP0411','B0512'],
    'B0514': ['B0614','B0513'],
    'B0515': ['B0415','B0514'],

    'B0601': ['B0501'],
    'B0602': ['BP0501','B0601'],
    'B0603': ['B0503','B0602'],
    'B0604': ['BP0503','B0603'],
    'B0605': ['B0505','B0604'],
    'B0606': ['BP0505','B0605'],
    'B0607': ['BP0506','B0606'],
    'B0608': ['B0508','B0607','B0609'],
    'B0609': ['BP0507','B0610'],
    'B0610': ['BP0508','B0611'],
    'B0611': ['B0511','B0612'],
    'B0612': ['BP0510','B0613'],
    'B0613': ['B0513','B0614'],
    'B0614': ['BP0512','B0615'],
    'B0615': ['B0515'],

    'BP0501': ['BP0601'],
    'BP0502': ['B0603','BP0503'],
    'BP0503': ['BP0603'],
    'BP0504': ['B0605','BP0505'],
    'BP0505': ['BP0605'],
    'BP0506': ['BP0606'],
    'BP0507': ['BP0607'],
    'BP0508': ['BP0608'],
    'BP0509': ['B0611','BP0508'],
    'BP0510': ['BP0610'],
    'BP0511': ['B0613','BP0510'],
    'BP0512': ['BP0612'],

    'BP0601': ['B0702'],
    'BP0602': ['BP0502'],
    'BP0603': ['B0704','BP0602'],
    'BP0604': ['BP0504'],
    'BP0605': ['B0706','BP0604'],
    'BP0606': ['B0707'],
    'BP0607': ['B0709'],
    'BP0608': ['B0710','BP0609'],
    'BP0609': ['BP0509'],
    'BP0610': ['B0712','BP0611'],
    'BP0611': ['BP0511'],
    'BP0612': ['B0714'],

    'B0701': ['B0601','B0702'],
    'B0702': ['B0802','B0703'],
    'B0703': ['BP0602','B0704'],
    'B0704': ['B0804','B0705'],
    'B0705': ['B0604','B0706'],
    'B0706': ['B0806','B0707'],
    'B0707': ['B0807'],
    'B0708': ['B0608'],
    'B0709': ['B0809'],
    'B0710': ['B0810','B0709'],
    'B0711': ['BP0609','B0710'],
    'B0712': ['B0812','B0711'],
    'B0713': ['BP0611','B0712'],
    'B0714': ['B0814','B0713'],
    'B0715': ['B0615','B0714'],

    'B0801': ['B0701'],
    'B0802': ['B0902','B0801'],
    'B0803': ['B0703','B0802'],
    'B0804': ['B0904','B0803'],
    'B0805': ['B0705','B0804'],
    'B0806': ['B0906','B0805'],
    'B0807': ['B0907','B0806'],
    'B0808': ['B0708','B0807','B0809'],
    'B0809': ['B0909','B0810'],
    'B0810': ['B0910','B0811'],
    'B0811': ['B0711','B0812'],
    'B0812': ['B0912','B0813'],
    'B0813': ['B0713','B0814'],
    'B0814': ['B0914','B0815'],
    'B0815': ['B0715'],

    'B0901': ['B0801','B0902'],
    'B0902': ['BO0102','B0903'],
    'B0903': ['B0803','B0904'],
    'B0904': ['BO0104','B0905'],
    'B0905': ['B0805','B0906'],
    'B0906': ['BO0106','B0907'],
    'B0907': ['BO0107'],
    'B0908': ['B0808'],
    'B0909': ['BO0109'],
    'B0910': ['BO0110','B0909'],
    'B0911': ['B0811','B0910'],
    'B0912': ['BO0112','B0911'],
    'B0913': ['B0813','B0912'],
    'B0914': ['BO0114','B0913'],
    'B0915': ['B0815','B0914'],

    'BO0101': [],
    'BO0102': [],
    'BO0103': [],
    'BO0104': [],
    'BO0105': [],
    'BO0106': [],
    'BO0107': [],
    'BO0108': [],
    'BO0109': [],
    'BO0110': [],
    'BO0111': [],
    'BO0112': [],
    'BO0113': [],
    'BO0114': [],
    'BO0115': [],

}

# 사용 예시
shortest_dist = dijkstra(graph, 'BS0102', 'BS0101')
print(shortest_dist)
# shortest_dist = dijkstra(graph, 'A', 'F', 'B')
# print(f"최단 거리: {shortest_dist}")  # 6